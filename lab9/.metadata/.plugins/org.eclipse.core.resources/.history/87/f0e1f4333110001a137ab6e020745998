import java.util.*;
class ArrayMap<K,V> extends AbstractMap<K,V> {
	K key;
	V value;
	//Entry - clasa interna pentru a modela o intrare in dictionar
	class Entry implements Map.Entry {
		K key;
		V value;
		
		public Entry(K key, V value) {
			this.key=key;
			this.value=value;
		}
		
		public V getValue() {
			return this.value;
		}
		
		public K getKey() {
			return this.key;
		}
		public V setValue(Object newValue) {
			V old=value; 
			value=(V)newValue;
			return old;
		}
	}
	
	private Set entries = null;
	public Set<Map.Entry<K, V>> entrySet() {
		if(entries==null) {
			entries = new HashSet();
		}
		return entries;
	}	
	
	public String toString() {
		return key.toString()+" "+value.toString();
	}
	
	public V put(Object key, Object value) {
        int size = list.size();
        ArrayMapEntry entry=null;
        int i;
        if (key == null) 
        {
            for (i = 0; i < size; i++)  {
                entry=(ArrayMapEntry)(list.get(i));
                if (entry.getKey() == null) {
                    break;
                }
            }
        } 
        else  {
            for (i = 0; i < size; i++) {
                entry = (ArrayMapEntry) (list.get(i));
                if (key.equals(entry.getKey())) {
                    break;
                }
            }
        }
        Object oldValue = null;
        if (i < size) {
            oldValue = entry.getValue();
            entry.setValue(value);
        }
        else {
            list.add(new ArrayMapEntry(key, value));
        }
        return (V)oldValue;
    }


}
